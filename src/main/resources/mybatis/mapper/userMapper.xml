<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.joongoing.dao.UserMapper">

  <select id="getUser" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
      FROM USER_T
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
      <if test="userNo != null">AND USER_NO = #{userNo}</if>
    </where>
  </select>
  
  <select id="getLeaveUser" parameterType="Map" resultType="LeaveUserDto">
    SELECT EMAIL, JOINED_AT, LEAVED_AT
      FROM LEAVE_USER
     WHERE EMAIL = #{email}
  </select>

  <select id="getInactiveUser" parameterType="Map" resultType="InactiveUserDto">
    SELECT USER_NO, EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, INACTIVED_AT, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
      FROM INACTIVE_USER
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
    </where>
  </select>
  
  <insert id="insertUser" parameterType="UserDto">
    INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , NAME
      , PW
      , GENDER
      , PHONE
      , AGREE
      , STATE
      , JOINED_AT
      , SIDO
      , SIGUNGU
      , INTEREST_SIDO
      , INTEREST_SIGUNGU
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{name}
      , #{pw}
      , #{gender}
      , #{phone}
      , #{agree}
      , 0
      , SYSTIMESTAMP
      , #{sido}
      , #{sigungu}
      , #{interestSido}
      , #{interestSigungu}
    )
  </insert>
  
  <insert id="insertAccess" parameterType="String">
    INSERT INTO ACCESS_T (
        EMAIL
      , LOGIN_AT
    ) VALUES (
        #{email}
      , SYSTIMESTAMP
    )
  </insert>
  
  <select id="findId" resultType="UserDto">
    SELECT USER_NO, EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
      FROM USER_T
     WHERE NAME = #{name}
       AND PHONE = #{phone}
  </select>
  
  <select id="findPwCheck" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
     WHERE EMAIL = #{email}
       AND NAME = #{name}
  </select>
  
  <update id="updatePw" parameterType="Map">
    UPDATE USER_T
       SET PW = #{pw}
     WHERE EMAIL = #{email}
       AND NAME = #{name}
  </update>
  
  <insert id="insertNaverUser" parameterType="UserDto">
    INSERT INTO USER_T (
        USER_NO
      , EMAIL
      , NAME
      , GENDER
      , PHONE
      , SIDO
      , SIGUNGU
      , AGREE
      , STATE
      , JOINED_AT
    ) VALUES (
        USER_SEQ.NEXTVAL
      , #{email}
      , #{name}
      , #{gender}
      , #{phone}
      , #{sido}
      , #{sigungu}
      , #{agree}
      , 1
      , SYSDATE
    )
  </insert>
  
  <insert id="insertLeaveUser" parameterType="userDto">
    INSERT INTO LEAVE_USER (
        EMAIL
      , JOINED_AT
      , LEAVED_AT
    ) VALUES (
        #{email}
      , #{joinedAt}
      , SYSTIMESTAMP
    )
  </insert>
  
  <delete id="deleteUser" parameterType="UserDto">
    DELETE
      FROM USER_T
     WHERE USER_NO = #{userNo}
  </delete>
  
  <insert id="insertInactiveUser">
    INSERT INTO INACTIVE_USER (
      SELECT USER_NO, U.EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, SYSTIMESTAMP, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
        FROM USER_T U LEFT OUTER JOIN ACCESS_T A
          ON U.EMAIL = A.EMAIL
       WHERE MONTHS_BETWEEN(SYSTIMESTAMP, LOGIN_AT) >= 12
          OR (LOGIN_AT IS NULL AND MONTHS_BETWEEN(SYSTIMESTAMP, JOINED_AT) >= 12)
    )
  </insert>
  
  <delete id="deleteUserForInactive">
    DELETE
      FROM USER_T
     WHERE EMAIL IN(SELECT U.EMAIL
                      FROM USER_T U LEFT OUTER JOIN ACCESS_T A
                        ON U.EMAIL = A.EMAIL
                     WHERE MONTHS_BETWEEN(SYSTIMESTAMP, LOGIN_AT) >= 12
                        OR (LOGIN_AT IS NULL AND MONTHS_BETWEEN(SYSTIMESTAMP, JOINED_AT) >= 12))
  </delete>

  <insert id="insertActiveUser" parameterType="String">  
    INSERT INTO USER_T (
      SELECT USER_NO, EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
        FROM INACTIVE_USER
       WHERE EMAIL = #{email}
    )
  </insert>

  <delete id="deleteInactiveUser" parameterType="String">
    DELETE
      FROM INACTIVE_USER
     WHERE EMAIL = #{email}  
  </delete>
  
  
</mapper>