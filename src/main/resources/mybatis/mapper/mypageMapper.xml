<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.joongoing.dao.MypageMapper">

<!-- UserDto, CategoryDto  resultMap-->
<resultMap type="ProductDto"               id="ProductMap">
  <id     column="PRODUCT_NO"             property="productNo"/>
  <result column="PRODUCT_NAME"           property="productName"/>
  <result column="PRODUCT_PRICE"          property="productPrice"/>
  <result column="PRODUCT_INFO"           property="productInfo"/>
  <result column="PRODUCT_CREATED_AT"     property="productCreatedAt"/>
  <result column="PRODUCT_MODIFIED_AT"    property="productModifiedAt"/>
  <result column="PRODUCT_HIT"            property="hit"/>
  <result column="PRODUCT_STATE"          property="state"/>
  <result column="PRODUCT_TRADE_ADDRESS"  property="tradeAddress" />
  <result column="REVIEW_CONTENTS"        property="reviewContents"/>
  <result column="REVIEW_SCORE"           property="reviewScore"/>
  <result column="CREATED_AT"             property="createdAt"/>
  <result column="TRADE_AT"               property="tradeAt"/>
  <association javaType="UserDto"   property="sellerDto">
    <id     column="USER_NO"        property="userNo"/>
    <result column="EMAIL"          property="email"/> 
    <result column="NAME"           property="name"/> 
    <result column="PW"             property="pw"/> 
    <result column="GENDER"         property="gender"/> 
    <result column="PHONE"          property="phone"/> 
    <result column="AGREE"          property="agree"/> 
    <result column="STATE"          property="state"/> 
    <result column="JOINED_AT"      property="joinedAt"/>  
    <result column="SIDO"           property="sido"/>  
    <result column="SIGUNGU"        property="sigungu"/>  
    <result column="INTEREST_SIDO"      property="interestSido" />
    <result column="INTEREST_SIGUNGU"   property="interestSigungu"/>
  </association>  
  <association javaType="UserDto"   property="buyerDto">
    <id     column="USER_NO"        property="userNo"/>
    <result column="EMAIL"          property="email"/> 
    <result column="NAME"           property="name"/> 
    <result column="PW"             property="pw"/> 
    <result column="GENDER"         property="gender"/> 
    <result column="PHONE"          property="phone"/> 
    <result column="AGREE"          property="agree"/> 
    <result column="STATE"          property="state"/> 
    <result column="JOINED_AT"      property="joinedAt"/>  
    <result column="SIDO"           property="sido"/>  
    <result column="SIGUNGU"        property="sigungu"/>  
    <result column="INTEREST_SIDO"      property="interestSido" />
    <result column="INTEREST_SIGUNGU"   property="interestSigungu"/>
  </association> 
  <association javaType="CategoryDto"     property="categoryDto">
    <id     column="CATEGORY_ID"        property="categoryId"/>
    <result column="NAME"               property="name" />
  </association>
</resultMap>

  <select id="getUser2" parameterType="Map" resultType="UserDto">
    SELECT USER_NO, EMAIL, NAME, PW, GENDER, PHONE, AGREE, STATE, JOINED_AT, SIDO, SIGUNGU, INTEREST_SIDO, INTEREST_SIGUNGU
      FROM USER_T
    <where>
      <if test="email != null">EMAIL = #{email}</if>
      <if test="pw != null">AND PW = #{pw}</if>
      <if test="userNo != null">AND USER_NO = #{userNo}</if>
    </where>
  </select>
  
  <update id="updateUserPw" parameterType="UserDto">
    UPDATE USER_T
       SET PW = #{pw}
     WHERE USER_NO = #{userNo}
  </update>

  <update id="updateUserInterest" parameterType="UserDto">
    UPDATE USER_T
       SET INTEREST_SIDO = #{interestSido}
         , INTEREST_SIGUNGU = #{interestSigungu}
     WHERE USER_NO = #{userNo}
  </update>
  
  <update id="updateUser" parameterType="UserDto">
    UPDATE USER_T
       SET NAME = #{name}
         , GENDER = #{gender}
         , PHONE = #{phone}
         , SIDO = #{sido}
         , SIGUNGU = #{sigungu}
         , AGREE = #{agree}
     WHERE USER_NO = #{userNo}
  </update>
  
  <select id="getSalesCount" parameterType="int" resultType="int">
  SELECT COUNT(*)
    FROM (SELECT P.PRODUCT_NO, P.SELLER_NO, P.BUYER_NO, P.CATEGORY_ID, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.PRODUCT_INFO, P.PRODUCT_CREATED_AT, 
                 P.PRODUCT_MODIFIED_AT, P.PRODUCT_HIT, P.PRODUCT_STATE, P.PRODUCT_TRADE_ADDRESS, P.REVIEW_CONTENTS, 
                 P.REVIEW_SCORE, P.CREATED_AT, P.TRADE_AT,
                 USR.USER_NO, USR.EMAIL, USR.NAME
            FROM PRODUCT P LEFT OUTER JOIN USER_T USR
              ON P.SELLER_NO = USR.USER_NO
           WHERE P.SELLER_NO = #{sellerNo})
  </select>
  
  <select id="getSalesList" parameterType="Map" resultMap="ProductMap">
    SELECT A.PRODUCT_NO, A.SELLER_NO, A.BUYER_NO, A.CATEGORY_ID, A.PRODUCT_NAME, A.PRODUCT_PRICE, A.PRODUCT_INFO, A.PRODUCT_CREATED_AT, 
           A.PRODUCT_MODIFIED_AT, A.PRODUCT_HIT, A.PRODUCT_STATE, A.PRODUCT_TRADE_ADDRESS, A.REVIEW_CONTENTS, 
           A.REVIEW_SCORE, A.CREATED_AT, A.TRADE_AT
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY PRODUCT_NO DESC) AS RN,
                   P.PRODUCT_NO, P.SELLER_NO, P.BUYER_NO, P.CATEGORY_ID, P.PRODUCT_NAME, P.PRODUCT_PRICE, P.PRODUCT_INFO, P.PRODUCT_CREATED_AT, 
                   P.PRODUCT_MODIFIED_AT, P.PRODUCT_HIT, P.PRODUCT_STATE, P.PRODUCT_TRADE_ADDRESS, P.REVIEW_CONTENTS, 
                   P.REVIEW_SCORE, P.CREATED_AT, P.TRADE_AT,
                   USR.USER_NO, USR.EMAIL, USR.NAME
              FROM PRODUCT P LEFT OUTER JOIN USER_T USR
                ON P.SELLER_NO = USR.USER_NO
             WHERE P.PRODUCT_STATE = 2) A
    WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
 
  
</mapper>