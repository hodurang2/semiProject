DROP TABLE USER_T;

CREATE TABLE USER_T (
	USER_NO	        NUMBER		            NOT NULL,
	EMAIL	        VARCHAR2(100 BYTE)		NOT NULL,
	NAME	        VARCHAR2(50 BYTE)		NULL,
	PW	            VARCHAR2(64 BYTE)		NULL,
	GENDER	        VARCHAR2(2 BYTE)		NULL,
	PHONE	        VARCHAR2(15 BYTE)		NULL,
	AGREE	        NUMBER		            NULL,
	STATE	        NUMBER		            NULL,
	JOINED_AT	    TIMESTAMP		        NULL,
	ROLE	        NUMBER	DEFAULT 1	    NOT NULL,
	POSTCODE	    VARCHAR2(5 BYTE)		NOT NULL,
	JIBUN_ADDRESS	VARCHAR2(100 BYTE)		NULL,
	DETAIL_ADDRESS	VARCHAR2(100 BYTE)		NULL,
	ROAD_ADDRESS	VARCHAR2(100 BYTE)		NULL
);

COMMENT ON COLUMN USER_T.USER_NO IS 'user_seq';

DROP TABLE PRODUCT;

CREATE TABLE PRODUCT (
	PRODUCT_NO	        NUMBER		            NOT NULL,
	SELLER_NO	        NUMBER		            NOT NULL,
	BUYER_NO	        NUMBER		            NULL,
	CATEGORY_ID	        NUMBER		            NOT NULL,
	PRODUCT_NAME	    VARCHAR2(100 BYTE)		NOT NULL,
	PRODUCT_PRICE	    NUMBER		            NOT NULL,
	PRODUCT_INFO	    VARCHAR2(4000 BYTE)		NULL,
	PRODUCT_CREATED_AT	TIMESTAMP		        NULL,
	PRODUCT_MODIFIED_AT	TIMESTAMP		        NULL,
	PRODUCT_HIT	        NUMBER	DEFAULT 0	    NULL,
	PRODUCT_LIKE	    NUMBER	DEFAULT 0	    NULL,
	PRODUCT_STATE	    NUMBER		            NULL,
	PRODUCT_TRADE_ADDRESS	VARCHAR2(100 BYTE)  NULL
);

COMMENT ON COLUMN PRODUCT.BUYER_NO IS 'user_seq';

DROP TABLE PRODUCT_IMAGE;

CREATE TABLE PRODUCT_IMAGE (
	IMAGE_NO	    NUMBER		            NOT NULL,
	PRODUCT_NO	    NUMBER		            NOT NULL,
	IMAGE_PATH	    VARCHAR2(100 BYTE)		NULL,
	IMAGE_NAME	    VARCHAR2(100 BYTE)		NULL,
	HASTHUMBNAIL	NUMBER		            NULL
);

DROP TABLE WISHLIST;

CREATE TABLE WISHLIST (
	WISH_NO	        NUMBER		    NOT NULL,
	USER_NO	        NUMBER		    NOT NULL,
	PRODUCT_NO	    NUMBER		    NOT NULL,
	CREATED_AT	    TIMESTAMP		NOT NULL
);

COMMENT ON COLUMN WISHLIST.USER_NO IS 'user_seq';

DROP TABLE ALARM;

CREATE TABLE ALARM (
	NOTICE_NO	NUMBER		NOT NULL,
	USER_NO	    NUMBER		NOT NULL,
	NOTICE_TYPE	NUMBER		NOT NULL,
	READ_OR_NOT	CHAR		NULL,
	CREATED_AT	TIMESTAMP	NOT NULL
);

COMMENT ON COLUMN ALARM.USER_NO IS 'user_seq';

DROP TABLE REVIEW;

CREATE TABLE REVIEW (
	REVIEW_NO	    NUMBER		        NOT NULL,
	BUYER_NO	    NUMBER		        NOT NULL,
	PRODUCT_NO	    NUMBER		        NOT NULL,
	CONTENTS	    VARCHAR2(500 BYTE)	NOT NULL,
	REVIEW_SCORE	NUMBER		        NOT NULL,
	CREATED_AT	    TIMESTAMP		    NOT NULL
);

COMMENT ON COLUMN REVIEW.BUYER_NO IS 'user_seq';

DROP TABLE INACTIVE_USER;

CREATE TABLE INACTIVE_USER (
	USER_NO	        NUMBER		            NOT NULL,
	EMAIL	        VARCHAR2(100 BYTE)		NOT NULL,
	PW	            VARCHAR2(64 BYTE)	    NULL,
	NAME	        VARCHAR2(50 BYTE)		NULL,
	GENDER	        VARCHAR2(2 BYTE)		NULL,
	MOBILE	        VARCHAR2(15 BYTE)		NULL,
	POSTCODE	    VARCHAR2(5 BYTE)	    NULL,
	ROAD_ADDRESS	VARCHAR2(100 BYTE)		NULL,
	JIBUN_ADDRESS	VARCHAR2(100 BYTE)		NULL,
	DETAIL_ADDRESS	VARCHAR2(100 BYTE)		NULL,
	AGREE	        NUMBER		            NOT NULL,
	STATE	        NUMBER		            NULL,
	PW_MODIFIED_AT	TIMESTAMP		        NULL,
	JOINED_AT	    TIMESTAMP		        NULL,
	INACTIVED_AT	TIMESTAMP		        NULL
);

COMMENT ON COLUMN INACTIVE_USER.PW IS 'SHA-256 암호화 방식 사용';

COMMENT ON COLUMN INACTIVE_USER.MOBILE IS '하이픈 제거 후 저장';

DROP TABLE LEAVE_USER;

CREATE TABLE LEAVE_USER (
	EMAIL	    VARCHAR2(50 BYTE)	NULL,
	JOINED_AT	TIMESTAMP		    NULL,
	LEAVED_AT	TIMESTAMP		    NULL
);

DROP TABLE CATEGORY;

CREATE TABLE CATEGORY (
	CATEGORY_ID	    NUMBER		            NOT NULL,
	NAME	        VARCHAR2(500 BYTE)		NOT NULL
);

DROP TABLE INQUIRY;

CREATE TABLE INQUIRY (
	INQUIRY_NO	        NUMBER		            NOT NULL,
	USER_NO	            NUMBER		            NOT NULL,
	INQUIRY_TITLE	    VARCHAR2(100 BYTE)		NOT NULL,
	INQUIRY_CONTENT	    VARCHAR2(4000 BYTE)		NOT NULL,
	INQUIRY_CREATED_AT	TIMESTAMP		        NULL,
	INQUIRY_MODIFIED_AT	TIMESTAMP		        NULL
);

COMMENT ON COLUMN INQUIRY.USER_NO IS 'user_seq';

DROP TABLE NOTICE;

CREATE TABLE NOTICE (
	NOTICE_NO	NUMBER		            NOT NULL,
	USER_NO	    NUMBER		            NOT NULL,
	EMAIL	    VARCHAR2(100 BYTE)		NULL,
	CONTENTS	VARCHAR2(4000 BYTE)		NOT NULL,
	CREATED_AT	TIMESTAMP		        NULL,
	STATUS	    NUMBER		            NOT NULL,
	GROUP_ORDER	NUMBER		            NOT NULL
);

COMMENT ON COLUMN NOTICE.USER_NO IS 'user_seq';

DROP TABLE PRODUCT_COMMENT;

CREATE TABLE PRODUCT_COMMENT (
	COMMENT_NO	NUMBER		        NOT NULL,
	PRODUCT_NO	NUMBER		        NOT NULL,
	USER_NO	    NUMBER		        NOT NULL,
	CONTENTS	VARCHAR2(500 BYTE)  NOT NULL,
	CREATED_AT	TIMESTAMP		    NULL,
	DEPTH	    NUMBER		        NOT NULL
);

COMMENT ON COLUMN PRODUCT_COMMENT.USER_NO IS 'user_seq';

DROP TABLE ASK;

CREATE TABLE ASK (
	ASK_NO	        NUMBER		    NOT NULL,
	INQUIRY_NO	    NUMBER		    NOT NULL,
	USER_NO	        NUMBER		    NOT NULL,
	CONTENTS	    VARCHAR2(500)	NULL,
	ASK_CREATED_AT	TIMESTAMP		NULL
);

ALTER TABLE USER_T ADD CONSTRAINT PK_USER_T PRIMARY KEY (
	USER_NO
);

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	PRODUCT_NO
);

ALTER TABLE PRODUCT_IMAGE ADD CONSTRAINT PK_PRODUCT_IMAGE PRIMARY KEY (
	IMAGE_NO
);

ALTER TABLE WISHLIST ADD CONSTRAINT PK_WISHLIST PRIMARY KEY (
	WISH_NO
);

ALTER TABLE ALARM ADD CONSTRAINT PK_ALARM PRIMARY KEY (
	NOTICE_NO
);

ALTER TABLE REVIEW ADD CONSTRAINT PK_REVIEW PRIMARY KEY (
	REVIEW_NO
);

ALTER TABLE INACTIVE_USER ADD CONSTRAINT PK_INACTIVE_USER PRIMARY KEY (
	USER_NO
);

ALTER TABLE CATEGORY ADD CONSTRAINT PK_CATEGORY PRIMARY KEY (
	CATEGORY_ID
);

ALTER TABLE INQUIRY ADD CONSTRAINT PK_INQUIRY PRIMARY KEY (
	INQUIRY_NO
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	NOTICE_NO
);

ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT PK_PRODUCT_COMMENT PRIMARY KEY (
	COMMENT_NO
);

ALTER TABLE ASK ADD CONSTRAINT PK_ASK PRIMARY KEY (
	ASK_NO
);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_USER_TO_PRODUCT_1 FOREIGN KEY (
	SELLER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_USER_TO_PRODUCT_2 FOREIGN KEY (
	BUYER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_CATEGORY_TO_PRODUCT_1 FOREIGN KEY (
	CATEGORY_ID
)
REFERENCES CATEGORY (
	CATEGORY_ID
);

ALTER TABLE PRODUCT_IMAGE ADD CONSTRAINT FK_PRODUCT_TO_PRODUCT_IMAGE_1 FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES PRODUCT (
	PRODUCT_NO
);

ALTER TABLE WISHLIST ADD CONSTRAINT FK_USER_TO_WISHLIST_1 FOREIGN KEY (
	USER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE WISHLIST ADD CONSTRAINT FK_PRODUCT_TO_WISHLIST_1 FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES PRODUCT (
	PRODUCT_NO
);

ALTER TABLE ALARM ADD CONSTRAINT FK_USER_TO_ALARM_1 FOREIGN KEY (
	USER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_USER_TO_REVIEW_1 FOREIGN KEY (
	BUYER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_PRODUCT_TO_REVIEW_1 FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES PRODUCT (
	PRODUCT_NO
);

ALTER TABLE INQUIRY ADD CONSTRAINT FK_USER_TO_INQUIRY_1 FOREIGN KEY (
	USER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE NOTICE ADD CONSTRAINT FK_USER_TO_NOTICE_1 FOREIGN KEY (
	USER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT FK_PRODUCT_TO_PRODUCT_COMMENT_1 FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES PRODUCT (
	PRODUCT_NO
);

ALTER TABLE PRODUCT_COMMENT ADD CONSTRAINT FK_USER_TO_PRODUCT_COMMENT_1 FOREIGN KEY (
	USER_NO
)
REFERENCES USER_T (
	USER_NO
);

ALTER TABLE ASK ADD CONSTRAINT FK_INQUIRY_TO_ASK_1 FOREIGN KEY (
	INQUIRY_NO
)
REFERENCES INQUIRY (
	INQUIRY_NO
);

ALTER TABLE ASK ADD CONSTRAINT FK_INQUIRY_TO_ASK_2 FOREIGN KEY (
	USER_NO
)
REFERENCES INQUIRY (
	INQUIRY_NO
);

